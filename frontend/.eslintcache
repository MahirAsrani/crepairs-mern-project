[{"F:\\MCA\\MP\\crepairs\\frontend\\src\\index.js":"1","F:\\MCA\\MP\\crepairs\\frontend\\src\\App.js":"2","F:\\MCA\\MP\\crepairs\\frontend\\src\\Home.js":"3","F:\\MCA\\MP\\crepairs\\frontend\\src\\login.js":"4","F:\\MCA\\MP\\crepairs\\frontend\\src\\Login.js":"5","F:\\MCA\\MP\\crepairs\\frontend\\src\\Context.js":"6","F:\\MCA\\MP\\crepairs\\frontend\\src\\pages\\Dashboard.js":"7","F:\\MCA\\MP\\crepairs\\frontend\\src\\pages\\Wash.js":"8","F:\\MCA\\MP\\crepairs\\frontend\\src\\Scrolltotop.js":"9"},{"size":629,"mtime":1612087765268,"results":"10","hashOfConfig":"11"},{"size":2235,"mtime":1612793359725,"results":"12","hashOfConfig":"11"},{"size":3421,"mtime":1612622866582,"results":"13","hashOfConfig":"11"},{"size":1653,"mtime":1612004868013,"results":"14","hashOfConfig":"11"},{"size":6322,"mtime":1612793429144,"results":"15","hashOfConfig":"11"},{"size":681,"mtime":1612441532842,"results":"16","hashOfConfig":"11"},{"size":1077,"mtime":1612717366089,"results":"17","hashOfConfig":"11"},{"size":6515,"mtime":1612760902723,"results":"18","hashOfConfig":"11"},{"size":319,"mtime":1612626479513,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"k2je0s",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"F:\\MCA\\MP\\crepairs\\frontend\\src\\index.js",[],["41","42"],"F:\\MCA\\MP\\crepairs\\frontend\\src\\App.js",[],"F:\\MCA\\MP\\crepairs\\frontend\\src\\Home.js",[],"F:\\MCA\\MP\\crepairs\\frontend\\src\\login.js",["43","44","45","46"],"F:\\MCA\\MP\\crepairs\\frontend\\src\\Login.js",["47"],"F:\\MCA\\MP\\crepairs\\frontend\\src\\Context.js",[],"F:\\MCA\\MP\\crepairs\\frontend\\src\\pages\\Dashboard.js",["48"],"import axios from 'axios';\r\nimport React, { useContext } from 'react';\r\nimport { myContext } from '../Context';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Wash from './Wash';\r\n\r\nfunction Dashboard() {\r\n  let { path, url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const { setAuth } = useContext(myContext);\r\n\r\n  function logout() {\r\n    axios\r\n      .get('/api/auth/logout', {}, { withCredentials: true })\r\n      .then(() => {\r\n        setAuth(false);\r\n        toast.info('Success logout');\r\n        history.push('/');\r\n      })\r\n      .catch((er) => console.log(er));\r\n  }\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={`${path}/lol`} component={Wash} />\r\n      </Switch>\r\n      <h1>hello loggedin user</h1>\r\n      <Link className=\"brand\" to={`${url}/lol`}>\r\n        Crepairs\r\n      </Link>\r\n      <button onClick={() => logout()}>logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","F:\\MCA\\MP\\crepairs\\frontend\\src\\pages\\Wash.js",["49"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { myContext } from '../Context';\r\nimport './services.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Wash() {\r\n  const { user, auth, setHeader } = useContext(myContext);\r\n  setHeader(false);\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    vehicleBrand: null,\r\n    vehicleType: 'Hatchback',\r\n    plan: null,\r\n  });\r\n\r\n  const plans = [\r\n    {\r\n      Name: 'Express',\r\n      Price: 200,\r\n      features: [{ name: 'abc' }, { name: '2' }, { name: '3' }, { name: '4' }],\r\n      Duration: '1 hr',\r\n    },\r\n\r\n    {\r\n      Name: 'Express 2',\r\n      Price: 400,\r\n      features: [{ name: '1' }, { name: '2' }, { name: '3' }, { name: '4' }],\r\n      Duration: '1.5 hr',\r\n    },\r\n\r\n    {\r\n      Name: 'Express 3',\r\n      Price: 400,\r\n      features: [{ name: '1ss' }, { name: '2' }, { name: '3' }, { name: '4' }],\r\n      Duration: '2 hr',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setAnimate(true);\r\n  }, [step]);\r\n\r\n  const handleContinue = () => {\r\n    if (step !== 3) {\r\n      setAnimate(false);\r\n      setStep((e) => e + 1);\r\n    }\r\n  };\r\n  const handlePrevious = () => {\r\n    if (step !== 1) {\r\n      setAnimate(false);\r\n      setStep((e) => e - 1);\r\n    }\r\n  };\r\n\r\n  const handlePlanSelect = (name) => {\r\n    setForm({ ...form, plan: name });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"service_nav\">\r\n        <div className=\"navbar-header\">\r\n          <Link className=\"brand\" to=\"/\">\r\n            Crepairs\r\n          </Link>\r\n        </div>\r\n        <div className=\"step_menu\">\r\n          <div className={step >= 1 ? 'step active' : 'step'}>\r\n            <p>Plans</p>\r\n            <div className=\"circle\">\r\n              {step > 1 ? <i className=\"gg-check\"></i> : 1}\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className={step >= 2 ? 'step active' : 'step'}>\r\n            <p>Schedule</p>\r\n            <div className=\"circle\">\r\n              {step > 2 ? <i className=\"gg-check\"></i> : 2}\r\n            </div>\r\n          </div>\r\n          <div className=\"line\"></div>\r\n          <div className={step >= 3 ? 'step active' : 'step '}>\r\n            <p>Payment</p>\r\n            <div className=\"circle\">\r\n              {step > 3 ? <i className=\"gg-check\"></i> : 3}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"auth\">\r\n          {user ? (\r\n            <Link className=\"login-btn\" to=\"/dashboard\">\r\n              {user.name}\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"login-btn\" to=\"/signin\">\r\n              Sign in\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mheight\">\r\n        {step === 1 && (\r\n          <CSSTransition in={animate} timeout={1000} classNames=\"animate\">\r\n            <div className=\"step1\">\r\n              <div className=\"row area-top\">\r\n                <div className=\"col-md-5 left_area\">\r\n                  <h2>Car Information</h2>\r\n\r\n                  <label>Vehicle Brand</label>\r\n                  <select>\r\n                    <option>Audi</option>\r\n                    <option>Bmw</option>\r\n                    <option>Kia</option>\r\n                  </select>\r\n\r\n                  <label>Vehicle Type</label>\r\n\r\n                  <select\r\n                    value={form.vehicleType}\r\n                    onChange={(e) =>\r\n                      setForm({ ...form, vehicleType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"Hatchback\">Hatchback</option>\r\n                    <option value=\"Sedan\">Sedan</option>\r\n                    <option value=\"SUV\">SUV</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-7 center\">\r\n                  <img\r\n                    src={\r\n                      require(`../assets/CarType/${form.vehicleType}.jpg`)\r\n                        .default\r\n                    }\r\n                    alt=\"car\"\r\n                    height=\"250px\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row plansGrid\">\r\n                {plans.map((data) => (\r\n                  <div className=\"col-md-3\">\r\n                    <div\r\n                      className={\r\n                        data.Name === form.plan ? 'plans active' : 'plans'\r\n                      }\r\n                      onClick={() => handlePlanSelect(data.Name)}\r\n                    >\r\n                      <div className=\"price\">\r\n                        <h5>{data.Name}</h5>\r\n                        <p>Rs. {data.Price} </p>\r\n                      </div>\r\n                      <div className=\"features\">\r\n                        {data.features.map((d) => (\r\n                          <div className=\"col-6\">\r\n                            <i class=\"gg-check\"></i>\r\n                            <p>{d.name}</p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <div className=\"time\">\r\n                        <div className=\"wtICON\">\r\n                          <i class=\"gg-alarm\"></i>\r\n                          <p>Duration</p>\r\n                        </div>\r\n                        <p>{data.Duration}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </CSSTransition>\r\n        )}\r\n        {step === 2 && (\r\n          <CSSTransition in={animate} timeout={1000} classNames=\"animate\">\r\n            <div className=\"step2\">\r\n              <h1>step 2 </h1>\r\n            </div>\r\n          </CSSTransition>\r\n        )}\r\n        {step === 3 && (\r\n          <CSSTransition in={animate} timeout={1000} classNames=\"animate\">\r\n            <div className=\"step3\">\r\n              <h1>step 3 </h1>\r\n            </div>\r\n          </CSSTransition>\r\n        )}\r\n        <div className=\"sFoot\">\r\n          <p\r\n            className={step === 1 ? 'prev disable' : 'prev'}\r\n            onClick={() => handlePrevious()}\r\n          >\r\n            Previous\r\n          </p>\r\n\r\n          <button className=\"Continue\" onClick={() => handleContinue()}>\r\n            {step !== 3 ? 'Continue' : 'Pay Now'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wash;\r\n","F:\\MCA\\MP\\crepairs\\frontend\\src\\Scrolltotop.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":15},{"ruleId":"54","severity":1,"message":"58","line":5,"column":17,"nodeType":"56","messageId":"57","endLine":5,"endColumn":25},{"ruleId":"54","severity":1,"message":"59","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"60","line":6,"column":16,"nodeType":"56","messageId":"57","endLine":6,"endColumn":23},{"ruleId":"54","severity":1,"message":"61","line":82,"column":9,"nodeType":"56","messageId":"57","endLine":82,"endColumn":16},{"ruleId":"54","severity":1,"message":"62","line":6,"column":27,"nodeType":"56","messageId":"57","endLine":6,"endColumn":33},{"ruleId":"54","severity":1,"message":"63","line":8,"column":17,"nodeType":"56","messageId":"57","endLine":8,"endColumn":21},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'setemail' is assigned a value but never used.","'pass' is assigned a value but never used.","'setpass' is assigned a value but never used.","'history' is assigned a value but never used.","'Router' is defined but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]